// serial1 led下位机
// serial2 放音乐的下位机
void setup()
{
    //略
}
void loop()
{
    if (mode == 0) // reset后的初始状态
    {
        
        CompareKey();       //模式比较
        ChangeArguments0(); //改变对应参数
        Serial1ReadMode(); //
        Serial2WriteMode(); //
        //Serial1Write0();    //①根据上方改变的参数去给其他板子发信息,例如音游模式就要下面准备蜂鸣器
        //②在按键选择的时候屏幕是要对应着改变的，屏幕显示什么也是由主机把当前的模式状态传给下位机，下位机据此显示对应内容
        // Serial1Read0(); //看看下位机有没有发消息给上位机，有的话再做调整。
    }
    else if (mode == 1) //自由模式
    {
        //对其中一个传感器
        Detect();        //上位机与传感器
        Play();          //上位机与电脑，播放
        Serial1WriteDrum();
        // Serial1Write1(); //上位机与下位机，提示其屏幕应该要改变 //这个函数不用了，屏幕与主板无关
        //把以上三个函数重复n遍

        Serial1ReadMode();//查询一下是否暂停，代替ketdetect函数
        // KeyDetect1(); //如果在进行演奏的过程中按下某些按键，可以起到暂停、回到主界面（mode=0）、静音某些乐器的作用..
        //..如果有必要跟下位机说一声（如模式改变）那也可以加一个
        Serial1Read1(); //看看下位机有没有发消息给上位机，有的话再做调整。
        //如果在实践中证明这个会很影响演奏响应速度，则可以改成把上下位机连几根IO线，读其IO值。
    }
    else if (mode == 2) //音游模式
    //注意，上位机和下位机的时钟是不需要同步的（？），当SerialWrite2发送信号过去的时候，由下位机来判断这是不是踩在节奏上了。
    {
        //对其中一个传感器
        Detect();        //上位机与传感器
        Play();          //上位机与电脑，播放
        Serial1WriteDrum();
        // Serial1Write2(); //上位机与下位机1，提示其屏幕应该要改变
        Serial2Write2(); //上位机与下位机2（放音乐的），提示计分要改变
        //把以上三个函数重复n遍
        //key放在下位机1上
        //KeyDetect2(); //如果在进行演奏的过程中按下某些按键，可以起到暂停、回到主界面（mode=0）、静音某些乐器的作用..
        //..如果有必要跟下位机说一声（如模式改变）那也可以加一个
        Serial1Read2(); //看看下位机有没有发消息给上位机，有的话再做调整。例如一首歌放完了，那mode应该变成3了，结束演奏。
        Serial2Read2(); // mode3?
        //记得把mode改变的事传回给其他下位机
        //如果在实践中证明这个会很影响演奏响应速度，则可以改成把上下位机连几根IO线，读其IO值。
    }
    else if (mode == 3) //演奏结束。这串代码在一首歌放完之后只跑一遍，跑完之后回到mode0，所以可以随便加delay
    {
        Serial1Write3(); //告诉led改变模式了。
        Serial2Write3(); //告诉放音乐的可以结束计分了
        delay();
        Serial2Read3(); //从放音乐的板子读取分数
        delay();
        Serial1Write3();    //把这个分值传给led板子
        ChangeArguments3(); // mode=0，以及其他。
    }
    //一个欠考虑的环节可能是当从一个mode忽然转成另一个的时候要做的操作。
    // 0->1;1->0;0->2;2->0;2->3,3->0六种情况。
    //另外在加delay的地方要慎重。
}
